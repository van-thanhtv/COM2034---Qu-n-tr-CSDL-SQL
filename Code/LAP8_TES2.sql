------------------------------LAP 8 TES 2-------------------
CREATE DATABASE LAP8_TES2

CREATE TABLE NHANVIEN(
MANV VARCHAR(10) PRIMARY KEY,
HOTEN NVARCHAR(50),
MAVP VARCHAR(10),
NGAYSINH DATE,
GIOITINH NVARCHAR(10),
EMAIL NVARCHAR(50),
SoDT NVARCHAR(15),
CMND NVARCHAR(15)
);
INSERT INTO  NHANVIEN VALUES ('NV02','TRAN VAN THANH','VP1','10/1/2020',N'NAM',N'thanh@gmail.com','1234566','4577543')
CREATE TABLE NHANTHAN(
MANHANTHAN VARCHAR(10) PRIMARY KEY,
MANV VARCHAR(10),
HOTEN NVARCHAR(50),
NGAYSINH DATE,
MOILIENHE NVARCHAR(50),
CONSTRAINT FK1 FOREIGN KEY (MANV) REFERENCES NHANVIEN(MANV)
);
--B2
--Xây dựng thủ tục Stored Procedure (SP) với các tham số đầu vào phù hợp thêm thông tin vào
--các bảng trên. (3 điểm)
-- Yêu cầu mỗi SP phải kiểm tra tham số đầu vào. Với các cột không chấp nhận thuộc tính Null.
-- Với mỗi SP viết 2 lời gọi thành công
IF OBJECT_ID ('B2') IS NOT NULL
DROP PROC B2
GO
CREATE PROC B2 (
@MANV NVARCHAR(10),
@HOTEN NVARCHAR(50),
@MAVP NVARCHAR(10),
@NGAYSINH DATE,
@GIOITINH NVARCHAR(10),
@EMAIL NVARCHAR(50),
@SODT NVARCHAR(15),
@CMND NVARCHAR(15)
)
AS
	IF @MANV IS NULL OR @HOTEN IS NULL OR @MAVP IS NULL
	OR @GIOITINH IS NULL OR  @NGAYSINH IS NULL OR @EMAIL IS NULL
	OR @SODT IS NULL OR @CMND IS NULL
	PRINT N'KHÔNG ĐƯỢC ĐỂ NULL'
	ELSE 
		INSERT INTO  NHANVIEN VALUES (@MANV,@HOTEN,@MAVP,@NGAYSINH,@GIOITINH,@EMAIL,@SODT,@CMND)
EXEC B2 'NV04','TRAN VAN THANH2','VP2','10/2/1002',N'NAM',N'thanh@gmail.com','1234566','4577543'
SELECT * FROM NHANVIEN
----
IF OBJECT_ID ('B2b') IS NOT NULL
DROP PROC B2b
GO
CREATE PROC B2b(
@MANHANTHAN NVARCHAR(10),
@MANV NVARCHAR(10),
@HOTEN NVARCHAR(50),
@NGAYSINH DATE,
@MOILIENHE NVARCHAR(20)
)
AS
	IF @MANHANTHAN IS NULL OR @MANV IS NULL 
	PRINT N'KHÔNG ĐƯỢC ĐỂ NULL'
	ELSE
		INSERT INTO NHANTHAN VALUES(@MANHANTHAN,@MANV,@HOTEN,@NGAYSINH,@MOILIENHE)
--
EXEC B2b 'NT01','NV01','VAN AN','12/2/1990','BO'
EXEC B2b 'NT02','NV01','VAN B','12/2/1960','ME'
EXEC B2b 'NT03','NV01','VAN AN','12/2/1990','EM'
SELECT * FROM NHANTHAN
--C3
--Viết hàm các tham số đầu vào tương ứng với các cột của bảng Nhanthan. Hàm này trả về
--MaNhanthan thỏa mãn các giá trị được truyền tham số. (2.5 điểm)
IF OBJECT_ID ('B3') IS NOT NULL
DROP FUNCTION B3
GO
CREATE FUNCTION B3 (
@MANHANTHAN NVARCHAR(10),
@MANV NVARCHAR(10),
@HOTEN NVARCHAR(50),
@NGAYSINH DATE,
@MOILIENHE NVARCHAR(20)
)
RETURNS TABLE
AS
RETURN (SELECT MANHANTHAN FROM NHANTHAN WHERE @MANHANTHAN=MANHANTHAN AND 
@MANV=MANV AND @HOTEN=HOTEN AND @NGAYSINH= NGAYSINH AND @MOILIENHE = MOILIENHE)

SELECT * FROM B3 ()


--C4
--Xây dựng thủ tục xóa có đầu vào là số lượng, Thủ tục thực hiện xóa thông tin ThanNhan và
--thông tin của NhanVien tương ứng nếu số lượng nhân thân của nhân viên lớn hơn giá trị
--tham số số lượng đầu vào.
IF OBJECT_ID ('B4') IS NOT NULL
DROP PROC B4
GO
CREATE PROC B4 @SL INT
AS
BEGIN TRY
		DECLARE @Tam TABLE (MA VARCHAR(10))
		INSERT INTO @Tam
		SELECT MANV FROM NHANTHAN GROUP BY MANHANTHAN,MANV HAVING COUNT(*) > @SL

		BEGIN TRAN
		--XÓA KHÓA NGOẠI--
		DELETE NHANTHAN
		WHERE MANV IN (SELECT * FROM @Tam)
		--- XÓA KHÓA CHÍNH ---
		DELETE NHANVIEN
		WHERE MANV IN (SELECT * FROM @Tam)
		COMMIT TRAN
END TRY
BEGIN CATCH
			ROLLBACK TRAN
END CATCH

EXEC B4 0
SELECT * FROM NHANVIEN
SELECT MANV, COUNT(MANV) FROM NHANTHAN GROUP BY MANHANTHAN,MANV 
SELECT * FROM NHANTHAN
--b5
--Tạo view Lưu thông tin Top 2 NhanVien có nhiều nhân thân nhất: MANV, HOTEN, SỐ NT

CREATE VIEW BAI5  
AS 
	SELECT TOP 2 N.MANV,N.HOTEN,COUNT(T.MANV) AS NT FROM NHANTHAN T JOIN NHANVIEN N ON T.MANV=N.MANV
	GROUP BY N.MANV,N.HOTEN
	ORDER BY COUNT(T.MANV) DESC

	SELECT * FROM BAI5